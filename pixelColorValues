import java.awt.*; //import border & color layout
import java.awt.event.*; //import mouse events
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;

public class pixelColorIdentifier extends JFrame{
	//private JFrame JF; //where cursor moves
	private JPanel mousepanel;
	private JLabel statusbar;

	//get image
    String path = "ColorWheel.png";
    File file = new File(path);
	BufferedImage image = ImageIO.read(file);
	int red;
	int blue;
	int green;
	

	public pixelColorIdentifier() throws IOException{
		super("Detect Color"); //TITLE
        
        JLabel label = new JLabel(new ImageIcon(image));		
        super.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        super.getContentPane().add(label);
        super.pack();
        super.setLocation(200,200);
        super.setVisible(true);
        mousepanel = new JPanel(); //background
        mousepanel.setBackground(Color.RED);
        add(mousepanel,BorderLayout.CENTER);
		
			statusbar = new JLabel ("default");
			add(statusbar, BorderLayout.SOUTH);
			
			HandlerClass handler = new HandlerClass();
//		this.addMouseListener(handler);
			mousepanel.addMouseListener(handler);
			mousepanel.addMouseMotionListener(handler);
			
	
	}
	
	private class HandlerClass implements MouseListener, MouseMotionListener{
		public void mouseClicked(MouseEvent e) {
//			statusbar.setText(String.format("Clicked at %d, %d", e.getX(), e.getY()));
		    int x=e.getX();
		    int y=e.getY();
		    red = new Color(image.getRGB(x, y)).getRed();
		    green = new Color(image.getRGB(x, y)).getGreen();
		    blue = new Color(image.getRGB(x,y)).getBlue();
		    System.out.println("red = "+ red + ", green = "+ green +", blue = " + blue);
		    RGBtoHSV.RGBtoHSV(red, green, blue);
		}

		@Override
		public void mousePressed(MouseEvent e) {}
		@Override
		public void mouseReleased(MouseEvent e) {}
		@Override
		public void mouseEntered(MouseEvent e) {}
		@Override
		public void mouseExited(MouseEvent e) {}
		@Override
		public void mouseDragged(MouseEvent e) {}
		@Override
		public void mouseMoved(MouseEvent e) {}
		

	}
	
	public static void main(String[] args) throws IOException{
		pixelColorIdentifier testClick = new pixelColorIdentifier();
		testClick.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		testClick.setSize(300,200);
		testClick.setVisible(true);
	}
}
